{"version":3,"sources":["Images/picture.png","Components/Cookie.js","Components/Upgrades.js","Components/Stats.js","App.js","reportWebVitals.js","index.js"],"names":["Cookie","props","className","src","require","default","alt","onClick","onMouseDown","onAnimationEnd","cookieClickedClassName","Upgrades","action","workerPerSecond","cost","onUpgradePerSecond","costPerSecond","Stats","upgrade","upgradePerSecond","counter","App","useState","setCounter","setUpgrade","setCost","setCostPerSecond","setUpgradePerSecond","isCookieClicked","setIsCookieClicked","useEffect","intervalId","setInterval","prevCounter","clearInterval","Math","round","prevUpgradePerSecond","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAA,OAAe,cAA0B,qC,qJCG1B,SAASA,EAAOC,GAC7B,OACE,qBAAKC,UAAU,kBAAf,SACE,qBACEC,IAAKC,EAAQ,IAAyBC,QACtCC,IAAI,SACJC,QAASN,EAAMM,QACfC,YAAaP,EAAMO,YACnBC,eAAgBR,EAAMQ,eACtBP,UAAS,wBAAmBD,EAAMS,4B,MCT3B,SAASC,EAASV,GAC/B,IAAMW,EAAmC,IAA1BX,EAAMY,gBAAwB,MAAQ,UAErD,OACE,qBAAKX,UAAU,WAAf,SACE,sBAAKA,UAAU,UAAf,UACE,yBAAQK,QAASN,EAAMM,QAAvB,sBAA0CN,EAAMa,KAAhD,OAEA,yBAAQP,QAASN,EAAMc,mBAAvB,UACGH,EADH,KACaX,EAAMY,gBADnB,sBAEGZ,EAAMe,cAFT,Y,MCRO,SAASC,EAAMhB,GAC5B,OACE,sBAAKC,UAAU,QAAf,UACE,oBAAGA,UAAU,OAAb,kCAA0CD,EAAMiB,WAChD,oBAAGhB,UAAU,OAAb,+BAAuCD,EAAMkB,oBAC7C,oBAAGjB,UAAU,OAAb,oBAA4BD,EAAMmB,cCEzB,SAASC,IACtB,MAA8BC,mBAAS,GAAvC,mBAAOF,EAAP,KAAgBG,EAAhB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOJ,EAAP,KAAgBM,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOR,EAAP,KAAaW,EAAb,KACA,EAA0CH,mBAAS,IAAnD,mBAAON,EAAP,KAAsBU,EAAtB,KACA,EAAgDJ,mBAAS,GAAzD,mBAAOH,EAAP,KAAyBQ,EAAzB,KACA,EAA8CL,oBAAS,GAAvD,mBAAOM,EAAP,KAAwBC,EAAxB,KA2CA,OARAC,qBAAU,WACR,IAAMC,EAAaC,aAAY,WAC7BT,GAAW,SAACU,GAAD,OAAiBA,EAAcd,OACzC,KAEH,OAAO,kBAAMe,cAAcH,MAC1B,CAACZ,IAGF,sBAAKjB,UAAU,MAAf,UACE,cAAC,EAAD,CACEK,QAtCgB,WAChBa,GAAWN,IACbS,EAAWH,EAAUN,GACrBU,EAAWN,EAAU,GACrBO,EAAQU,KAAKC,MAAa,EAAPtB,MAmCjBA,KAAMA,EACNC,mBA/ByB,WACzBK,GAAWJ,IACY,IAArBG,GACFQ,EAAoB,GACpBJ,EAAWH,EAAUJ,GACrBU,EAAiBS,KAAKC,MAAsB,EAAhBpB,MAE5BO,EAAWH,EAAUJ,GACrBW,GAAoB,SAACU,GAAD,OAAiD,EAAvBA,KAC9CX,EAAiBS,KAAKC,MAAsB,EAAhBpB,OAuB5BH,gBAAiBM,EACjBH,cAAeA,IAEjB,cAAC,EAAD,CACET,QAlDc,WAClBgB,EAAWH,EAAUF,IAkDjBV,YAvBkB,WACtBqB,GAAmB,IAuBfnB,uBAAwBkB,EAAkB,gBAAkB,GAC5DnB,eAAgB,WACdoB,GAAmB,MAGvB,cAAC,EAAD,CACET,QAASA,EACTF,QAASA,EACTC,iBAAkBA,OC/E1B,IAYemB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2cf16877.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/picture.18820570.png\";","import React from \"react\";\r\nimport \"../Styles/Cookie.css\";\r\n\r\nexport default function Cookie(props) {\r\n  return (\r\n    <div className=\"cookieContainer\">\r\n      <img\r\n        src={require(\"../Images/picture.png\").default}\r\n        alt=\"cookie\"\r\n        onClick={props.onClick}\r\n        onMouseDown={props.onMouseDown}\r\n        onAnimationEnd={props.onAnimationEnd}\r\n        className={`cookiePicture ${props.cookieClickedClassName}`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../Styles/Upgrades.css\";\r\n\r\nexport default function Upgrades(props) {\r\n  const action = props.workerPerSecond === 0 ? \"Buy\" : \"Upgrade\";\r\n\r\n  return (\r\n    <div className=\"upgrades\">\r\n      <div className=\"buttons\">\r\n        <button onClick={props.onClick}>Upgrade ({props.cost})</button>\r\n\r\n        <button onClick={props.onUpgradePerSecond}>\r\n          {action} +{props.workerPerSecond} score per second (\r\n          {props.costPerSecond})\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../Styles/Stats.css\";\r\n\r\nexport default function Stats(props) {\r\n  return (\r\n    <div className=\"stats\">\r\n      <p className=\"stat\">Current click power: {props.upgrade}</p>\r\n      <p className=\"stat\">Score per second: {props.upgradePerSecond}</p>\r\n      <p className=\"stat\">Score: {props.counter}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Cookie from \"./Components/Cookie\";\nimport Upgrades from \"./Components/Upgrades\";\nimport Stats from \"./Components/Stats\";\n\nexport default function App() {\n  const [counter, setCounter] = useState(1);\n  const [upgrade, setUpgrade] = useState(1);\n  const [cost, setCost] = useState(10);\n  const [costPerSecond, setCostPerSecond] = useState(50);\n  const [upgradePerSecond, setUpgradePerSecond] = useState(0);\n  const [isCookieClicked, setIsCookieClicked] = useState(false);\n\n  //Score handle function\n  const handleClick = () => {\n    setCounter(counter + upgrade);\n  };\n\n  //Upgrade handle function\n  const handleUpgrade = () => {\n    if (counter >= cost) {\n      setCounter(counter - cost);\n      setUpgrade(upgrade + 1);\n      setCost(Math.round(cost * 2));\n    }\n  };\n\n  //Handles upgrading score per second\n  const handleUpgradePerSecond = () => {\n    if (counter >= costPerSecond) {\n      if (upgradePerSecond === 0) {\n        setUpgradePerSecond(1);\n        setCounter(counter - costPerSecond);\n        setCostPerSecond(Math.round(costPerSecond * 2));\n      } else {\n        setCounter(counter - costPerSecond);\n        setUpgradePerSecond((prevUpgradePerSecond) => prevUpgradePerSecond * 2);\n        setCostPerSecond(Math.round(costPerSecond * 2));\n      }\n    }\n  };\n\n  const handleMouseDown = () => {\n    setIsCookieClicked(true);\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCounter((prevCounter) => prevCounter + upgradePerSecond);\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [upgradePerSecond]);\n\n  return (\n    <div className=\"App\">\n      <Upgrades\n        onClick={handleUpgrade}\n        cost={cost}\n        onUpgradePerSecond={handleUpgradePerSecond}\n        workerPerSecond={upgradePerSecond}\n        costPerSecond={costPerSecond}\n      />\n      <Cookie\n        onClick={handleClick}\n        onMouseDown={handleMouseDown}\n        cookieClickedClassName={isCookieClicked ? \"cookieClicked\" : \"\"}\n        onAnimationEnd={() => {\n          setIsCookieClicked(false);\n        }}\n      />\n      <Stats\n        counter={counter}\n        upgrade={upgrade}\n        upgradePerSecond={upgradePerSecond}\n      />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}